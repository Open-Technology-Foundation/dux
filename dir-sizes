#!/bin/bash
set -euo pipefail
declare -- PRG0=$(readlink -fn -- "$0")
declare -- PRGDIR=$(dirname -- "$PRG0")
declare -- PRG=$(basename -- "$PRG0")

declare -a Dirs=()
declare -- dir hr_size size
declare -- tmpdir=/tmp/.dir-sizes_"$$"_"$RANDOM"

if (($#)); then
  if [[ $1 == '-h' || $1 == '--help' ]]; then
    cat <<-EOT
dir-sizes - Display directory sizes in human-readable format

Usage: $PRG [dir]
  dir    Directory to analyze (defaults to current directory)

Examples:
  $PRG              # Show sizes for current directory subdirectories
  $PRG /var         # Show sizes for /var subdirectories
  $PRG | sort -h    # Sort by human-readable sizes

Output Format:
  <size>  <path>
  Where:
  - <size> is the human-readable size (e.g., 128MB, 1.5GB)
  - <path> is the directory path
EOT
    exit 0
  fi
fi

readarray -t Dirs < <(find "${1:-./}" -maxdepth 1 -type d)

# First pass: collect directory sizes directly using du
# Create empty temp file
> "$tmpdir"

for dir in "${Dirs[@]}"; do
  # Get the raw size in bytes using du
  size=$(du -sb "$dir" | cut -f1)
  # Write to temporary file with proper format
  printf "%15d 0 %s\n" "$size" "$dir" >> "$tmpdir"
done

# Sort by size
sort -n "$tmpdir" > "${tmpdir}.sorted"
mv "${tmpdir}.sorted" "$tmpdir"

# Second pass: display with human-readable sizes while preserving order
while read -r size nodes dir; do
  hr_size=$(numfmt --to=iec --suffix=B --format="%.1f" "$size")
  printf "%-10s\t%s\n" "$hr_size" "$dir"
done < "$tmpdir"

# Clean up
rm -f "$tmpdir"

#fin
